"use strict";
var Tetris;
(function (Tetris) {
    var ƒ = FudgeCore;
    window.addEventListener("load", hndLoad);
    let graph;
    let activeForm;
    let colliders = [];
    function hndLoad(_event) {
        const canvas = document.querySelector("canvas");
        graph = new ƒ.Node("Graph");
        activeForm = Tetris.Form.random();
        let floor = Tetris.Form.floor(15, new ƒ.Vector3(-6, -11, 0));
        let wallL = Tetris.Form.wall(23, new ƒ.Vector3(-8, -10, 0));
        let wallR = Tetris.Form.wall(23, new ƒ.Vector3(8, -10, 0));
        graph.appendChild(floor);
        graph.appendChild(wallL);
        graph.appendChild(wallR);
        graph.appendChild(activeForm);
        colliders.push(floor);
        colliders.push(wallL);
        colliders.push(wallR);
        let cmpCamera = new ƒ.ComponentCamera();
        cmpCamera.pivot.translateZ(25);
        cmpCamera.pivot.rotateY(180);
        Tetris.viewport = new ƒ.Viewport();
        Tetris.viewport.initialize("Viewport", graph, cmpCamera, canvas);
        document.addEventListener("keypress", control);
        ƒ.Loop.addEventListener("loopFrame" /* LOOP_FRAME */, update);
        ƒ.Loop.start(ƒ.LOOP_MODE.TIME_REAL, 10);
    }
    function update(_event) {
        if (!activeForm.tryMoveY(colliders)) {
            colliders.push(activeForm);
            activeForm = Tetris.Form.random();
            graph.appendChild(activeForm);
            Tetris.viewport.setGraph(graph);
        }
        Tetris.viewport.draw();
    }
    function control(_event) {
        let direction;
        let rotation;
        direction = ƒ.Keyboard.mapToValue(ƒ.Vector3.X(), ƒ.Vector3.ZERO(), ([ƒ.KEYBOARD_CODE.D]));
        direction.add(ƒ.Keyboard.mapToValue(ƒ.Vector3.X(-1), ƒ.Vector3.ZERO(), [ƒ.KEYBOARD_CODE.A]));
        rotation = ƒ.Keyboard.mapToValue(1, 0, ([ƒ.KEYBOARD_CODE.Q]));
        rotation += (ƒ.Keyboard.mapToValue(-1, 0, [ƒ.KEYBOARD_CODE.E]));
        activeForm.moveX(direction);
        activeForm.rotateZ(rotation);
        Tetris.viewport.draw();
    }
})(Tetris || (Tetris = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQVUsTUFBTSxDQWtFZjtBQWxFRCxXQUFVLE1BQU07SUFDZCxJQUFPLENBQUMsR0FBRyxTQUFTLENBQUM7SUFFckIsTUFBTSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV6QyxJQUFJLEtBQWEsQ0FBQztJQUNsQixJQUFJLFVBQWdCLENBQUM7SUFDckIsSUFBSSxTQUFTLEdBQVcsRUFBRSxDQUFDO0lBRTNCLFNBQVMsT0FBTyxDQUFDLE1BQWE7UUFDNUIsTUFBTSxNQUFNLEdBQXNCLFFBQVEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7UUFHbkUsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM1QixVQUFVLEdBQUcsT0FBQSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDM0IsSUFBSSxLQUFLLEdBQVMsT0FBQSxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM1RCxJQUFJLEtBQUssR0FBUyxPQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNELElBQUksS0FBSyxHQUFTLE9BQUEsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTFELEtBQUssQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDekIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixLQUFLLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pCLEtBQUssQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFOUIsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0QixTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFdEIsSUFBSSxTQUFTLEdBQXNCLElBQUksQ0FBQyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQzNELFNBQVMsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQy9CLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTdCLE9BQUEsUUFBUSxHQUFHLElBQUksQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzVCLE9BQUEsUUFBUSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUUxRCxRQUFRLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRS9DLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLCtCQUFxQixNQUFNLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRUQsU0FBUyxNQUFNLENBQUMsTUFBZ0I7UUFDOUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDbkMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUMzQixVQUFVLEdBQUcsT0FBQSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDM0IsS0FBSyxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUM5QixPQUFBLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDMUI7UUFFRCxPQUFBLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsQixDQUFDO0lBRUQsU0FBUyxPQUFPLENBQUMsTUFBYTtRQUM1QixJQUFJLFNBQW9CLENBQUM7UUFDekIsSUFBSSxRQUFnQixDQUFDO1FBRXJCLFNBQVMsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFGLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFN0YsUUFBUSxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzlELFFBQVEsSUFBSSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWhFLFVBQVUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUIsVUFBVSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM3QixPQUFBLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsQixDQUFDO0FBQ0gsQ0FBQyxFQWxFUyxNQUFNLEtBQU4sTUFBTSxRQWtFZiIsInNvdXJjZXNDb250ZW50IjpbIm5hbWVzcGFjZSBUZXRyaXMge1xyXG4gIGltcG9ydCDGkiA9IEZ1ZGdlQ29yZTtcclxuXHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGhuZExvYWQpO1xyXG4gIGV4cG9ydCBsZXQgdmlld3BvcnQ6IMaSLlZpZXdwb3J0O1xyXG4gIGxldCBncmFwaDogxpIuTm9kZTtcclxuICBsZXQgYWN0aXZlRm9ybTogRm9ybTtcclxuICBsZXQgY29sbGlkZXJzOiBGb3JtW10gPSBbXTtcclxuXHJcbiAgZnVuY3Rpb24gaG5kTG9hZChfZXZlbnQ6IEV2ZW50KTogdm9pZCB7XHJcbiAgICBjb25zdCBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImNhbnZhc1wiKTtcclxuXHJcblxyXG4gICAgZ3JhcGggPSBuZXcgxpIuTm9kZShcIkdyYXBoXCIpO1xyXG4gICAgYWN0aXZlRm9ybSA9IEZvcm0ucmFuZG9tKCk7XHJcbiAgICBsZXQgZmxvb3I6IEZvcm0gPSBGb3JtLmZsb29yKDE1LCBuZXcgxpIuVmVjdG9yMygtNiwgLTExLCAwKSk7XHJcbiAgICBsZXQgd2FsbEw6IEZvcm0gPSBGb3JtLndhbGwoMjMsIG5ldyDGki5WZWN0b3IzKC04LCAtMTAsIDApKTtcclxuICAgIGxldCB3YWxsUjogRm9ybSA9IEZvcm0ud2FsbCgyMywgbmV3IMaSLlZlY3RvcjMoOCwgLTEwLCAwKSk7XHJcblxyXG4gICAgZ3JhcGguYXBwZW5kQ2hpbGQoZmxvb3IpO1xyXG4gICAgZ3JhcGguYXBwZW5kQ2hpbGQod2FsbEwpO1xyXG4gICAgZ3JhcGguYXBwZW5kQ2hpbGQod2FsbFIpO1xyXG4gICAgZ3JhcGguYXBwZW5kQ2hpbGQoYWN0aXZlRm9ybSk7XHJcblxyXG4gICAgY29sbGlkZXJzLnB1c2goZmxvb3IpO1xyXG4gICAgY29sbGlkZXJzLnB1c2god2FsbEwpO1xyXG4gICAgY29sbGlkZXJzLnB1c2god2FsbFIpO1xyXG5cclxuICAgIGxldCBjbXBDYW1lcmE6IMaSLkNvbXBvbmVudENhbWVyYSA9IG5ldyDGki5Db21wb25lbnRDYW1lcmEoKTtcclxuICAgIGNtcENhbWVyYS5waXZvdC50cmFuc2xhdGVaKDI1KTtcclxuICAgIGNtcENhbWVyYS5waXZvdC5yb3RhdGVZKDE4MCk7XHJcblxyXG4gICAgdmlld3BvcnQgPSBuZXcgxpIuVmlld3BvcnQoKTtcclxuICAgIHZpZXdwb3J0LmluaXRpYWxpemUoXCJWaWV3cG9ydFwiLCBncmFwaCwgY21wQ2FtZXJhLCBjYW52YXMpO1xyXG5cclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCBjb250cm9sKTtcclxuXHJcbiAgICDGki5Mb29wLmFkZEV2ZW50TGlzdGVuZXIoxpIuRVZFTlQuTE9PUF9GUkFNRSwgdXBkYXRlKTtcclxuICAgIMaSLkxvb3Auc3RhcnQoxpIuTE9PUF9NT0RFLlRJTUVfUkVBTCwgMTApO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlKF9ldmVudDogxpIuRXZlbnTGkik6IHZvaWQge1xyXG4gICAgaWYgKCFhY3RpdmVGb3JtLnRyeU1vdmVZKGNvbGxpZGVycykpIHtcclxuICAgICAgY29sbGlkZXJzLnB1c2goYWN0aXZlRm9ybSk7XHJcbiAgICAgIGFjdGl2ZUZvcm0gPSBGb3JtLnJhbmRvbSgpO1xyXG4gICAgICBncmFwaC5hcHBlbmRDaGlsZChhY3RpdmVGb3JtKTtcclxuICAgICAgdmlld3BvcnQuc2V0R3JhcGgoZ3JhcGgpO1xyXG4gICAgfVxyXG5cclxuICAgIHZpZXdwb3J0LmRyYXcoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNvbnRyb2woX2V2ZW50OiBFdmVudCk6IHZvaWQge1xyXG4gICAgbGV0IGRpcmVjdGlvbjogxpIuVmVjdG9yMztcclxuICAgIGxldCByb3RhdGlvbjogbnVtYmVyO1xyXG5cclxuICAgIGRpcmVjdGlvbiA9IMaSLktleWJvYXJkLm1hcFRvVmFsdWUoxpIuVmVjdG9yMy5YKCksIMaSLlZlY3RvcjMuWkVSTygpLCAoW8aSLktFWUJPQVJEX0NPREUuRF0pKTtcclxuICAgIGRpcmVjdGlvbi5hZGQoxpIuS2V5Ym9hcmQubWFwVG9WYWx1ZSjGki5WZWN0b3IzLlgoLTEpLCDGki5WZWN0b3IzLlpFUk8oKSwgW8aSLktFWUJPQVJEX0NPREUuQV0pKTtcclxuXHJcbiAgICByb3RhdGlvbiA9IMaSLktleWJvYXJkLm1hcFRvVmFsdWUoMSwgMCwgKFvGki5LRVlCT0FSRF9DT0RFLlFdKSk7XHJcbiAgICByb3RhdGlvbiArPSAoxpIuS2V5Ym9hcmQubWFwVG9WYWx1ZSgtMSwgMCwgW8aSLktFWUJPQVJEX0NPREUuRV0pKTtcclxuXHJcbiAgICBhY3RpdmVGb3JtLm1vdmVYKGRpcmVjdGlvbik7XHJcbiAgICBhY3RpdmVGb3JtLnJvdGF0ZVoocm90YXRpb24pO1xyXG4gICAgdmlld3BvcnQuZHJhdygpO1xyXG4gIH1cclxufSJdfQ==